package moveit_msgs;

public interface Place {
  static final java.lang.String _TYPE = "moveit_msgs/Place";
  static final java.lang.String _DEFINITION = ""
      + "# An action for placing an object\n"
      + "# which group to be used to plan for grasping\n"
      + "string group_name\n"
      + "# the name of the attached object to place\n"
      + "string attached_object_name\n"
      + "# a list of possible transformations for placing the object\n"
      + "PlaceLocation[] place_locations\n"
      + "# if the user prefers setting the eef pose (same as in pick) rather than \n"
      + "# the location of the object, this flag should be set to true\n"
      + "bool place_eef\n"
      + "# the name that the support surface (e.g. table) has in the collision world\n"
      + "# can be left empty if no name is available\n"
      + "string support_surface_name\n"
      + "# whether collisions between the gripper and the support surface should be acceptable\n"
      + "# during move from pre-place to place and during retreat. Collisions when moving to the\n"
      + "# pre-place location are still not allowed even if this is set to true.\n"
      + "bool allow_gripper_support_collision\n"
      + "# Optional constraints to be imposed on every point in the motion plan\n"
      + "Constraints path_constraints\n"
      + "# The name of the motion planner to use. If no name is specified,\n"
      + "# a default motion planner will be used\n"
      + "string planner_id\n"
      + "# an optional list of obstacles that we have semantic information about\n"
      + "# and that can be touched/pushed/moved in the course of placing;\n"
      + "# CAREFUL: If the object name \'all\' is used, collisions with all objects are disabled during the approach & retreat.\n"
      + "string[] allowed_touch_objects\n"
      + "# The maximum amount of time the motion planner is allowed to plan for\n"
      + "float64 allowed_planning_time\n"
      + "# Planning options\n"
      + "PlanningOptions planning_options\n"
      + "---\n"
      + "# The result of the place attempt\n"
      + "MoveItErrorCodes error_code\n"
      + "# The full starting state of the robot at the start of the trajectory\n"
      + "RobotState trajectory_start\n"
      + "# The trajectory that moved group produced for execution\n"
      + "RobotTrajectory[] trajectory_stages\n"
      + "string[] trajectory_descriptions\n"
      + "# The successful place location, if any\n"
      + "PlaceLocation place_location\n"
      + "# The amount of time in seconds it took to complete the plan\n"
      + "float64 planning_time\n"
      + "---\n"
      + "# The internal state that the place action currently is in\n"
      + "string state\n"
      + "";
}
